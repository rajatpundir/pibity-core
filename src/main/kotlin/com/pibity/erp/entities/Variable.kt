/* 
 * Copyright (C) 2020 Pibity Infotech Private Limited - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * THIS IS UNPUBLISHED PROPRIETARY CODE OF PIBITY INFOTECH PRIVATE LIMITED
 * The copyright notice above does not evidence any actual or intended publication of such source code.
 */

package com.pibity.erp.entities

import com.pibity.erp.entities.embeddables.VariableId
import com.pibity.erp.serializers.serialize
import java.io.Serializable
import java.util.*
import javax.persistence.*
import kotlin.collections.HashSet

@Entity
@Table(name = "variable", schema = "inventory")
data class Variable(

    @EmbeddedId
    val id: VariableId,

    @OneToOne
    var subList: VariableList,

    @Column(name = "auto_generated_id", nullable = false)
    val autoGeneratedId: Int = 0,

    @Column(name = "reference_count", nullable = false)
    var referenceCount: Long = 0,

    @Column(name = "active", nullable = false)
    var active: Boolean = true,

    @OneToMany(mappedBy = "id.variable", cascade = [CascadeType.ALL])
    val values: MutableSet<Value> = HashSet(),

    @OneToMany(mappedBy = "referencedVariable", cascade = [CascadeType.ALL])
    val referencingValues: Set<Value> = HashSet(),

    // Use this to find out which lists contain this variable
    @ManyToMany(mappedBy = "variables")
    val referencingLists: Set<VariableList> = HashSet()

) : Serializable {

  override fun equals(other: Any?): Boolean {
    other ?: return false
    if (this === other) return true
    other as Variable
    return this.id == other.id
  }

  override fun hashCode(): Int = Objects.hash(id)

  override fun toString(): String = serialize(this).toString()
}
